//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Core.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Core.Resources.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If an error occurs during game preparation, the game will crash.
        /// </summary>
        public static string AbortGameWhenError_Description {
            get {
                return ResourceManager.GetString("AbortGameWhenError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Abort game when setup error.
        /// </summary>
        public static string AbortGameWhenError_Name {
            get {
                return ResourceManager.GetString("AbortGameWhenError_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Block.
        /// </summary>
        public static string Block {
            get {
                return ResourceManager.GetString("Block", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cancel.
        /// </summary>
        public static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Civilians get the opportunity to kill any player by voting.
        /// </summary>
        public static string CanInnocentsKillAtNight_Description {
            get {
                return ResourceManager.GetString("CanInnocentsKillAtNight_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Civilians can kill at night.
        /// </summary>
        public static string CanInnocentsKillAtNight_Name {
            get {
                return ResourceManager.GetString("CanInnocentsKillAtNight_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The category will allow you to group all game channels.
        /// </summary>
        public static string CategoryChannelId_Description {
            get {
                return ResourceManager.GetString("CategoryChannelId_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Category ID.
        /// </summary>
        public static string CategoryChannelId_Name {
            get {
                return ResourceManager.GetString("CategoryChannelId_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change the value of one or two parameters to resolve the conflict.
        /// </summary>
        public static string ChangeParameterValueForConflictSolve {
            get {
                return ResourceManager.GetString("ChangeParameterValueForConflictSolve", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Changes not found.
        /// </summary>
        public static string ChangesNotFound {
            get {
                return ResourceManager.GetString("ChangesNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Before the start of the game, the bot will clear all channels from past discussions.
        /// </summary>
        public static string ClearChannelsOnStart_Description {
            get {
                return ResourceManager.GetString("ClearChannelsOnStart_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clear channels before starting the game.
        /// </summary>
        public static string ClearChannelsOnStart_Name {
            get {
                return ResourceManager.GetString("ClearChannelsOnStart_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Close.
        /// </summary>
        public static string Close {
            get {
                return ResourceManager.GetString("Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If this option is enabled, the game will end only when the last peaceful card dies.
        /// </summary>
        public static string ConditionAliveAtLeast1Innocent_Description {
            get {
                return ResourceManager.GetString("ConditionAliveAtLeast1Innocent_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Continue the game until the last peaceful.
        /// </summary>
        public static string ConditionAliveAtLeast1Innocent_Name {
            get {
                return ResourceManager.GetString("ConditionAliveAtLeast1Innocent_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If the option is enabled, the game will not end after the death of all the mafia.
        /// </summary>
        public static string ConditionContinueGameWithNeutrals_Description {
            get {
                return ResourceManager.GetString("ConditionContinueGameWithNeutrals_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Continue playing with neutrals.
        /// </summary>
        public static string ConditionContinueGameWithNeutrals_Name {
            get {
                return ResourceManager.GetString("ConditionContinueGameWithNeutrals_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Doctors count.
        /// </summary>
        public static string DoctorsCount_Name {
            get {
                return ResourceManager.GetString("DoctorsCount_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sets number of self-healing. *Doctor cannot heal any player 2 times in a row*.
        /// </summary>
        public static string DoctorSelfHealsCount_Description {
            get {
                return ResourceManager.GetString("DoctorSelfHealsCount_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Doctor self heals count.
        /// </summary>
        public static string DoctorSelfHealsCount_Name {
            get {
                return ResourceManager.GetString("DoctorSelfHealsCount_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Dons count.
        /// </summary>
        public static string DonsCount_Name {
            get {
                return ResourceManager.GetString("DonsCount_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Failed to set parameter value **{0}**.
        /// </summary>
        public static string FailedSetParameterValue {
            get {
                return ResourceManager.GetString("FailedSetParameterValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Game.
        /// </summary>
        public static string GameBlock {
            get {
                return ResourceManager.GetString("GameBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на General.
        /// </summary>
        public static string GeneralBlock {
            get {
                return ResourceManager.GetString("GeneralBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на In this channel there is a daily discussion and voting.
        /// </summary>
        public static string GeneralTextChannelId_Description {
            get {
                return ResourceManager.GetString("GeneralTextChannelId_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на General text channel ID.
        /// </summary>
        public static string GeneralTextChannelId_Name {
            get {
                return ResourceManager.GetString("GeneralTextChannelId_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Voice channel open during afternoon discussion.
        /// </summary>
        public static string GeneralVoiceChannelId_Description {
            get {
                return ResourceManager.GetString("GeneralVoiceChannelId_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на General voice channel ID.
        /// </summary>
        public static string GeneralVoiceChannelId_Name {
            get {
                return ResourceManager.GetString("GeneralVoiceChannelId_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hookers count.
        /// </summary>
        public static string HookersCount_Name {
            get {
                return ResourceManager.GetString("HookersCount_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Innocents count.
        /// </summary>
        public static string InnocentsCount_Name {
            get {
                return ResourceManager.GetString("InnocentsCount_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на All civilians are required to vote in one player. *Votes without a clear choice do not count*.
        /// </summary>
        public static string InnocentsMustVoteForOnePlayer_Description {
            get {
                return ResourceManager.GetString("InnocentsMustVoteForOnePlayer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Civilians must vote unanimously.
        /// </summary>
        public static string InnocentsMustVoteForOnePlayer_Name {
            get {
                return ResourceManager.GetString("InnocentsMustVoteForOnePlayer_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Invalid parameter value.
        /// </summary>
        public static string InvalidParameterValue {
            get {
                return ResourceManager.GetString("InvalidParameterValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Apply custom game settings. **Not compatible with ranked play**.
        /// </summary>
        public static string IsCustomGame_Description {
            get {
                return ResourceManager.GetString("IsCustomGame_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Custom game.
        /// </summary>
        public static string IsCustomGame_Name {
            get {
                return ResourceManager.GetString("IsCustomGame_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на By default, the table is filled with civilians. This option fills the table with mafia.
        /// </summary>
        public static string IsFillWithMurders_Description {
            get {
                return ResourceManager.GetString("IsFillWithMurders_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fill table with mafia.
        /// </summary>
        public static string IsFillWithMurders_Name {
            get {
                return ResourceManager.GetString("IsFillWithMurders_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Determines whether to take into account the next game in the statistics and rating of players.
        /// </summary>
        public static string IsRatingGame_Description {
            get {
                return ResourceManager.GetString("IsRatingGame_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rating game.
        /// </summary>
        public static string IsRatingGame_Name {
            get {
                return ResourceManager.GetString("IsRatingGame_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Number of nights after which a killed player can send a posthumous message.
        /// </summary>
        public static string LastWordNightCount_Description {
            get {
                return ResourceManager.GetString("LastWordNightCount_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Number of last words.
        /// </summary>
        public static string LastWordNightCount_Name {
            get {
                return ResourceManager.GetString("LastWordNightCount_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mafia coefficient cannot be less than {0}.
        /// </summary>
        public static string MafiaCoefError {
            get {
                return ResourceManager.GetString("MafiaCoefError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Determines ratio of civilians to the mafia by the formula: maf = players / coef. Example: 2 = 8 / 3.
        /// </summary>
        public static string MafiaCoefficient_Description {
            get {
                return ResourceManager.GetString("MafiaCoefficient_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mafia coefficient.
        /// </summary>
        public static string MafiaCoefficient_Name {
            get {
                return ResourceManager.GetString("MafiaCoefficient_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The main role required for the correct operation of the game.
        /// </summary>
        public static string MafiaRoleId_Description {
            get {
                return ResourceManager.GetString("MafiaRoleId_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mafia Role ID.
        /// </summary>
        public static string MafiaRoleId_Name {
            get {
                return ResourceManager.GetString("MafiaRoleId_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select the block of settings you are interested in.
        /// </summary>
        public static string MafiaSettingsBlockSelect {
            get {
                return ResourceManager.GetString("MafiaSettingsBlockSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Maniacs count.
        /// </summary>
        public static string ManiacsCount_Name {
            get {
                return ResourceManager.GetString("ManiacsCount_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на At the start of the game, the bot will send a message mentioning all the participants in the game.
        /// </summary>
        public static string MentionPlayersOnGameStart_Description {
            get {
                return ResourceManager.GetString("MentionPlayersOnGameStart_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mention players on game start.
        /// </summary>
        public static string MentionPlayersOnGameStart_Name {
            get {
                return ResourceManager.GetString("MentionPlayersOnGameStart_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Murders count.
        /// </summary>
        public static string MurdersCount_Name {
            get {
                return ResourceManager.GetString("MurdersCount_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mafia will have a another chat available, where members of mafia can to know their teammates.
        /// </summary>
        public static string MurdersKnowEachOther_Description {
            get {
                return ResourceManager.GetString("MurdersKnowEachOther_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Murders know each other.
        /// </summary>
        public static string MurdersKnowEachOther_Name {
            get {
                return ResourceManager.GetString("MurdersKnowEachOther_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The entire mafia is required to vote in one player. *Votes without a clear choice do not count*.
        /// </summary>
        public static string MurdersMustVoteForOnePlayer_Description {
            get {
                return ResourceManager.GetString("MurdersMustVoteForOnePlayer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mafia must vote unanimously.
        /// </summary>
        public static string MurdersMustVoteForOnePlayer_Name {
            get {
                return ResourceManager.GetString("MurdersMustVoteForOnePlayer_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Here the mafia decides who to kill.
        /// </summary>
        public static string MurdersTextChannelId_Description {
            get {
                return ResourceManager.GetString("MurdersTextChannelId_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mafia Text Channel ID.
        /// </summary>
        public static string MurdersTextChannelId_Name {
            get {
                return ResourceManager.GetString("MurdersTextChannelId_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mafia can discuss their night plans in this channel.
        /// </summary>
        public static string MurdersVoiceChannelId_Description {
            get {
                return ResourceManager.GetString("MurdersVoiceChannelId_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mafia Voice Channel ID.
        /// </summary>
        public static string MurdersVoiceChannelId_Name {
            get {
                return ResourceManager.GetString("MurdersVoiceChannelId_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If option is disabled the mafia will vote individually through bot&apos;s DM and result will be summed up.
        /// </summary>
        public static string MurdersVoteTogether_Description {
            get {
                return ResourceManager.GetString("MurdersVoteTogether_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Murders vote together.
        /// </summary>
        public static string MurdersVoteTogether_Name {
            get {
                return ResourceManager.GetString("MurdersVoteTogether_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на *No description*.
        /// </summary>
        public static string NoDescription {
            get {
                return ResourceManager.GetString("NoDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на N/A.
        /// </summary>
        public static string NotAssigned {
            get {
                return ResourceManager.GetString("NotAssigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Parameter.
        /// </summary>
        public static string Parameter {
            get {
                return ResourceManager.GetString("Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Select the parameter you are interested in.
        /// </summary>
        public static string ParameterSelect {
            get {
                return ResourceManager.GetString("ParameterSelect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A message that will be shown before the game. Useful for a brief description of the settings used.
        /// </summary>
        public static string PreGameMessage_Description {
            get {
                return ResourceManager.GetString("PreGameMessage_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Preamble.
        /// </summary>
        public static string PreGameMessage_Name {
            get {
                return ResourceManager.GetString("PreGameMessage_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The absence of roles for the player ensures that he will only see game chats.
        /// </summary>
        public static string RemoveRolesFromUsers_Description {
            get {
                return ResourceManager.GetString("RemoveRolesFromUsers_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Remove roles from users.
        /// </summary>
        public static string RemoveRolesFromUsers_Name {
            get {
                return ResourceManager.GetString("RemoveRolesFromUsers_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Используется для предотвращения ситуаций с сменой ника во время игры.
        /// </summary>
        public static string RenameUsers_Description {
            get {
                return ResourceManager.GetString("RenameUsers_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Rename users without server nickname.
        /// </summary>
        public static string RenameUsers_Name {
            get {
                return ResourceManager.GetString("RenameUsers_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Used to prevent situations with nickname changes during the game.
        /// </summary>
        public static string ReplyMessagesOnSetupError_Description {
            get {
                return ResourceManager.GetString("ReplyMessagesOnSetupError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Reply messages on setup error.
        /// </summary>
        public static string ReplyMessagesOnSetupError_Name {
            get {
                return ResourceManager.GetString("ReplyMessagesOnSetupError_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Roles amount.
        /// </summary>
        public static string RolesAmountBlock {
            get {
                return ResourceManager.GetString("RolesAmountBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Roles extra settings.
        /// </summary>
        public static string RolesExtraInfoBlock {
            get {
                return ResourceManager.GetString("RolesExtraInfoBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Immediately after the start of the game, the bot will send a welcome message.
        /// </summary>
        public static string SendWelcomeMessage_Description {
            get {
                return ResourceManager.GetString("SendWelcomeMessage_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Send welcome message.
        /// </summary>
        public static string SendWelcomeMessage_Name {
            get {
                return ResourceManager.GetString("SendWelcomeMessage_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Server.
        /// </summary>
        public static string ServerBlock {
            get {
                return ResourceManager.GetString("ServerBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings conflict.
        /// </summary>
        public static string SettingsConflict {
            get {
                return ResourceManager.GetString("SettingsConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings error.
        /// </summary>
        public static string SettingsError {
            get {
                return ResourceManager.GetString("SettingsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings successfully saved.
        /// </summary>
        public static string SettingsSuccessfullySaved {
            get {
                return ResourceManager.GetString("SettingsSuccessfullySaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sheriffs count.
        /// </summary>
        public static string SheriffsCount_Name {
            get {
                return ResourceManager.GetString("SheriffsCount_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на If sheriff is available to shot, before voting, player will have a choice of action: shoot or check.
        /// </summary>
        public static string SheriffShotsCount_Description {
            get {
                return ResourceManager.GetString("SheriffShotsCount_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sheriff shots count.
        /// </summary>
        public static string SheriffShotsCount_Name {
            get {
                return ResourceManager.GetString("SheriffShotsCount_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Specify the value of the selected parameter **{0}**.
        /// </summary>
        public static string SpecifyValue {
            get {
                return ResourceManager.GetString("SpecifyValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Killed players can watch the game progress and try to guess the roles.
        /// </summary>
        public static string SpectatorsTextChannelId_Description {
            get {
                return ResourceManager.GetString("SpectatorsTextChannelId_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Spectator Text Channel ID.
        /// </summary>
        public static string SpectatorsTextChannelId_Name {
            get {
                return ResourceManager.GetString("SpectatorsTextChannelId_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Observers can discuss the game by voice.
        /// </summary>
        public static string SpectatorsVoiceChannelId_Description {
            get {
                return ResourceManager.GetString("SpectatorsVoiceChannelId_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Spectator Voice Channel ID.
        /// </summary>
        public static string SpectatorsVoiceChannelId_Name {
            get {
                return ResourceManager.GetString("SpectatorsVoiceChannelId_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Options {0} and {1} are mutually exclusive.
        /// </summary>
        public static string TheOptionsMutuallyExclusive {
            get {
                return ResourceManager.GetString("TheOptionsMutuallyExclusive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Value.
        /// </summary>
        public static string Value {
            get {
                return ResourceManager.GetString("Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The value of **{0}** was successfully changed:.
        /// </summary>
        public static string ValueChanged {
            get {
                return ResourceManager.GetString("ValueChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You did not specify a value for the parameter **{0}**.
        /// </summary>
        public static string ValueNotSpecified {
            get {
                return ResourceManager.GetString("ValueNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Values match.
        /// </summary>
        public static string ValuesMatch {
            get {
                return ResourceManager.GetString("ValuesMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The time that is given to a person for night and day voting.
        /// </summary>
        public static string VoteTime_Description {
            get {
                return ResourceManager.GetString("VoteTime_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Vote time.
        /// </summary>
        public static string VoteTime_Name {
            get {
                return ResourceManager.GetString("VoteTime_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Voting time cannot be less than {0} seconds.
        /// </summary>
        public static string VoteTimeError {
            get {
                return ResourceManager.GetString("VoteTimeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Role for spectators.
        /// </summary>
        public static string WatcherRoleId_Description {
            get {
                return ResourceManager.GetString("WatcherRoleId_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Mafia Spectator Role ID.
        /// </summary>
        public static string WatcherRoleId_Name {
            get {
                return ResourceManager.GetString("WatcherRoleId_Name", resourceCulture);
            }
        }
    }
}
